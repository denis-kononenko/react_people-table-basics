{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/HomePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","App","NotFoundPage","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","map","born","died","mother","motherName","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PeoplePage","useState","preparedPeople","setPreparedPeople","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","useParams","useEffect","find","item","fatherName","catch","finally","length","HomePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.eb18d582.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n  slug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother ? (\n                  <PersonLink person={person.mother} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n              <td>\n                {person.father ? (\n                  <PersonLink person={person.father} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [preparedPeople, setPreparedPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then(people => {\n        setHasLoadingError(false);\n        setPreparedPeople(people.map(person => {\n          const mother = people\n            .find(item => item.name === person.motherName);\n\n          const father = people\n            .find(item => item.name === person.fatherName);\n\n          return { ...person, mother, father };\n        }));\n      })\n      .catch(() => setHasLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !hasLoadingError && preparedPeople.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !hasLoadingError && preparedPeople.length !== 0 && (\n            <PeopleTable people={preparedPeople} slug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}